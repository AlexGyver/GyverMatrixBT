#if (USE_ANIMATION == 1 && WIDTH == 16 && HEIGHT == 16)

const uint16_t frame00[] PROGMEM = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x3000, 0xF000, 0xF800, 0xF800, 0xF800, 0xF000, 0x3000, 0x3000, 0x3000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x40A0, 0xE003, 0xF001, 0xF000, 0xF960, 0xF960, 0xF001, 0xF960, 0xF000, 0xF000, 0x5960, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x61A0, 0x5960, 0x7200, 0xFE60, 0xF660, 0x3980, 0xE603, 0x6280, 0x5A60, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x5960, 0xE603, 0x61A0, 0xE603, 0xFEA0, 0xFE80, 0x39A0, 0xE603, 0xFEA0, 0xFE80, 0x7B40, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x5960, 0xE603, 0x7200, 0x7220, 0xFE80, 0xFEA0, 0xE603, 0x5A60, 0xE603, 0xF660, 0xFE80, 0x39A0, 0x0000,
  0x0000, 0x0000, 0x0000, 0x3000, 0x7200, 0xE603, 0xF660, 0xFEA0, 0xFE80, 0x5A60, 0x3160, 0x39A0, 0x39A0, 0x5A60, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xF660, 0xFE40, 0xF660, 0xFE40, 0xF660, 0xF660, 0xE603, 0x39A0, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x40A0, 0xF000, 0xF8E0, 0xF000, 0x119D, 0xF000, 0xF000, 0x3160, 0x3160, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x6120, 0xF800, 0xF800, 0xF800, 0xF000, 0x08FE, 0x119D, 0xF000, 0xE003, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x6120, 0xF800, 0xF800, 0xF001, 0x28DA, 0x093E, 0xD6C5, 0x18DC, 0x18DC, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x5960, 0xF001, 0xF800, 0xF800, 0xE063, 0x117D, 0x095E, 0x00FF, 0x08FE, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x28DA, 0xE003, 0xF840, 0xFE00, 0xE603, 0x093E, 0x00FF, 0x18DC, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x28DA, 0xE063, 0xF660, 0xE603, 0x093E, 0x08FE, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x28DA, 0x18DC, 0x19DC, 0x19DC, 0x113D, 0x18DC, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x40A0, 0x48C0, 0x48C0, 0x38A0, 0x38A0, 0x38A0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x40A0, 0x48C0, 0x48C0, 0x48C0, 0x38A0, 0x38A0, 0x38A0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};

const uint16_t frame01[] PROGMEM = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x3000, 0xF000, 0xF800, 0xF800, 0xF800, 0xF001, 0x3000, 0x3000, 0x3000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x40A0, 0xE802, 0xF001, 0xF000, 0xF860, 0xF840, 0xF001, 0xF800, 0xF001, 0xF001, 0x5960, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x61A0, 0x5960, 0x7200, 0xFE60, 0xF660, 0x3980, 0xD580, 0x6280, 0x5A60, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x5960, 0xD580, 0x61A0, 0xD580, 0xFEA0, 0xFE80, 0x39A0, 0xD580, 0xFEA0, 0xFE80, 0x7B40, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x5960, 0xD580, 0x7200, 0x7220, 0xFE80, 0xFEA0, 0xD580, 0x5A60, 0xF660, 0xF660, 0xFE80, 0x39A0, 0x0000,
  0x0000, 0x0000, 0x0000, 0x3000, 0x7200, 0xF660, 0xF660, 0xFEA0, 0xFE80, 0x5A60, 0x3160, 0x39A0, 0x39A0, 0x5A60, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xF660, 0xFE40, 0xFE40, 0xF660, 0xF660, 0xF660, 0xF660, 0x39A0, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3160, 0xF001, 0xF001, 0x18DC, 0x10FD, 0xE003, 0x3160, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x3960, 0x3160, 0xF001, 0xF800, 0xF800, 0xF001, 0x18DC, 0xF001, 0xFE40, 0xFEA0, 0x6AE0, 0x0000, 0x0000,
  0x0000, 0x0000, 0x6AE0, 0xFEA0, 0xFE40, 0xF001, 0xF800, 0xF800, 0xF800, 0xF001, 0xF840, 0xFE40, 0xFEA0, 0xF660, 0x39A0, 0x0000,
  0x0000, 0x39A0, 0xF660, 0xF660, 0xF660, 0x18DC, 0xE003, 0xF001, 0xF001, 0xF001, 0xF001, 0xF660, 0xF660, 0x5A60, 0x0000, 0x0000,
  0x0000, 0x0000, 0x5960, 0x5960, 0x18DC, 0x00FF, 0x093E, 0x093E, 0x093E, 0x093E, 0x093E, 0x18DC, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x48C0, 0x40C0, 0x10FD, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x093E, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x48C0, 0x40C0, 0x10FD, 0x00FF, 0x20F0, 0x20F0, 0x10FD, 0x10FD, 0x18DC, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x40A0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x48C0, 0x48C0, 0x40A0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x48C0, 0x48C0, 0x48C0, 0x40C0, 0x0000, 0x0000, 0x0000, 0x0000,
};

const uint16_t frame02[] PROGMEM = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x3000, 0xF000, 0xF800, 0xF800, 0xF800, 0xF000, 0x3000, 0x3000, 0x3000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x40A0, 0xE003, 0xF001, 0xF000, 0xF960, 0xF960, 0xF001, 0xF960, 0xF000, 0xF000, 0x5960, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x61A0, 0x5960, 0x7200, 0xFE60, 0xF660, 0x3980, 0xE603, 0x6280, 0x5A60, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x5960, 0xE603, 0x61A0, 0xE603, 0xFEA0, 0xFE80, 0x39A0, 0xE603, 0xFEA0, 0xFE80, 0x7B40, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x5960, 0xE603, 0x7200, 0x7220, 0xFE80, 0xFEA0, 0xE603, 0x5A60, 0xE603, 0xF660, 0xFE80, 0x39A0, 0x0000,
  0x0000, 0x0000, 0x0000, 0x3000, 0x7200, 0xE603, 0xF660, 0xFEA0, 0xFE80, 0x5A60, 0x3160, 0x39A0, 0x39A0, 0x5A60, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xF660, 0xFE40, 0xF660, 0xFE40, 0xF660, 0xF660, 0xE603, 0x39A0, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x40A0, 0xF000, 0xF8E0, 0xF000, 0x119D, 0xF000, 0xF000, 0x3160, 0x3160, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x6120, 0xF800, 0xF800, 0xF800, 0xF000, 0x08FE, 0x119D, 0xF000, 0xE003, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x6120, 0xF800, 0xF800, 0xF001, 0x28DA, 0x093E, 0xD6C5, 0x18DC, 0x18DC, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x5960, 0xF001, 0xF800, 0xF800, 0xE063, 0x117D, 0x095E, 0x00FF, 0x08FE, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x28DA, 0xE003, 0xF840, 0xFE00, 0xE603, 0x093E, 0x00FF, 0x18DC, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x28DA, 0xE063, 0xF660, 0xE603, 0x093E, 0x08FE, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x28DA, 0x18DC, 0x19DC, 0x19DC, 0x113D, 0x18DC, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x40A0, 0x48C0, 0x48C0, 0x38A0, 0x38A0, 0x38A0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x40A0, 0x48C0, 0x48C0, 0x48C0, 0x38A0, 0x38A0, 0x38A0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};

const uint16_t frame03[] PROGMEM = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x3000, 0xF000, 0xF800, 0xF800, 0xF800, 0xF001, 0x3000, 0x3000, 0x3000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x40A0, 0xE802, 0xF001, 0xF000, 0xF980, 0xF980, 0xF001, 0xF960, 0xF001, 0xF001, 0x5960, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x61A0, 0x5960, 0x7200, 0xFE60, 0xF600, 0x3980, 0xDD44, 0x6280, 0x5A60, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x5960, 0xDD44, 0x61A0, 0xE623, 0xFEA0, 0xFE80, 0x39A0, 0xE623, 0xFEA0, 0xFE80, 0x7B40, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x5960, 0xE623, 0x7200, 0x7220, 0xFE80, 0xFEA0, 0xD580, 0x5A60, 0xE623, 0xF660, 0xFE80, 0x39A0, 0x0000,
  0x0000, 0x0000, 0x0000, 0x3000, 0x7200, 0xE623, 0xF660, 0xFEA0, 0xFE80, 0x5A60, 0x3160, 0x39A0, 0x39A0, 0x5A60, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xF600, 0xF660, 0xFE40, 0xFE40, 0xF600, 0xE623, 0xE623, 0x39A0, 0x0000, 0x0000, 0x0000,
  0x0000, 0x48C0, 0xF820, 0xF820, 0xF820, 0xF001, 0x211B, 0xF001, 0xF940, 0xF001, 0x30D9, 0x3160, 0x0000, 0x0000, 0x0000, 0x0000,
  0xFEA0, 0xFE60, 0xF980, 0xF800, 0xF800, 0xF001, 0x08FE, 0x193C, 0xF001, 0xF001, 0xE023, 0x211B, 0xF001, 0xFE40, 0xFEA0, 0xFEA0,
  0xFEA0, 0xFEA0, 0xE623, 0x3000, 0xE003, 0xE003, 0x18DC, 0xD6C5, 0x193C, 0x08FE, 0x19DC, 0xD6C5, 0xF041, 0xF041, 0xF600, 0xF660,
  0xF660, 0xE623, 0x39A0, 0x28ED, 0x193C, 0x093E, 0x011F, 0x093E, 0x00FF, 0x00FF, 0x00FF, 0x08FE, 0x28ED, 0x0000, 0x48C0, 0x0000,
  0x0000, 0x0000, 0x20F1, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x08FE, 0x48C0, 0x48C0, 0x0000,
  0x0000, 0x0000, 0x08FE, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x08FE, 0x48C0, 0x48C0, 0x0000,
  0x0000, 0x40C0, 0x28ED, 0x08FC, 0x011F, 0x00FF, 0x28ED, 0x28ED, 0x28ED, 0x28ED, 0x00FF, 0x00FF, 0x08FE, 0x48C0, 0x48C0, 0x0000,
  0x0000, 0x48C0, 0x48C0, 0x40A0, 0x28ED, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x28ED, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x48C0, 0x48C0, 0x48C0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};

// ------------------- Загрузка картинок и фреймов анимации ------------------- 
// Данный пример работает при размере матрицы 16x16 - такие картинки подготовлены в этом файле
// для других размеров матрицы - подготовьте собственные картинки

timerMinim gifTimer(D_GIF_SPEED);

void loadImage(const uint16_t (*frame)) {
  uint16_t w; 
  for (byte i = 0; i < WIDTH; i++) {
    for (byte j = 0; j < HEIGHT; j++) {
      drawPixelXY(i, j, gammaCorrection(expandColor((pgm_read_word(&(frame[(HEIGHT - j - 1) * WIDTH + i]))))));
    }
  }  
  // да, тут происходит лютенький п@здец, а именно:
  // 1) pgm_read_word - восстанавливаем из PROGMEM (флэш памяти) цвет пикселя в 16 битном формате по его координатам
  // 2) expandColor - расширяем цвет до 24 бит (спасибо adafruit)
  // 3) gammaCorrection - проводим коррекцию цвета для более корректного отображения
}

// показать картинку
void imageRoutine() {
  if (loadingFlag) {
    loadingFlag = false;
    modeCode = MC_IMAGE;
    loadImage(frame00);
  }
}

void animation() {
  if (loadingFlag) {
    loadingFlag = false;
    modeCode = MC_IMAGE;
  }
  bool isReady = gifTimer.isReady();
  if (isReady) {
    frameNum++;
    if (frameNum >= 4) frameNum = 0;
    switch (frameNum) {
      case 0:
        loadImage(frame00);
        break;
      case 1:
        loadImage(frame01);
        break;
      case 2:
        loadImage(frame02);
        break;
      case 3:
        loadImage(frame03);
        break;
    }
  }  
}

#else 

void loadImage(const uint16_t (*frame)) { }
void imageRoutine() { }
void animation() { }

#endif      
